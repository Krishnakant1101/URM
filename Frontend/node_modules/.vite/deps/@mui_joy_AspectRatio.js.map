{
  "version": 3,
  "sources": ["../../@mui/joy/AspectRatio/AspectRatio.js", "../../@mui/joy/AspectRatio/aspectRatioClasses.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"children\", \"ratio\", \"minHeight\", \"maxHeight\", \"objectFit\", \"color\", \"variant\", \"component\", \"flex\", \"slots\", \"slotProps\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\r\nimport { unstable_capitalize as capitalize } from '@mui/utils';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport useSlot from '../utils/useSlot';\r\nimport styled from '../styles/styled';\r\nimport { getAspectRatioUtilityClass } from './aspectRatioClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    variant,\r\n    color\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    content: ['content', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]\r\n  };\r\n  return composeClasses(slots, getAspectRatioUtilityClass, {});\r\n};\r\n\r\n// Use to control the width of the content, usually in a flexbox row container\r\nconst AspectRatioRoot = styled('div', {\r\n  name: 'JoyAspectRatio',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})(({\r\n  ownerState,\r\n  theme\r\n}) => {\r\n  const minHeight = typeof ownerState.minHeight === 'number' ? `${ownerState.minHeight}px` : ownerState.minHeight;\r\n  const maxHeight = typeof ownerState.maxHeight === 'number' ? `${ownerState.maxHeight}px` : ownerState.maxHeight;\r\n  return {\r\n    // a context variable for any child component\r\n    '--AspectRatio-paddingBottom': `clamp(var(--AspectRatio-minHeight), calc(100% / (${ownerState.ratio})), var(--AspectRatio-maxHeight))`,\r\n    '--AspectRatio-maxHeight': maxHeight || '9999px',\r\n    '--AspectRatio-minHeight': minHeight || '0px',\r\n    '--Icon-color': ownerState.color !== 'neutral' || ownerState.variant === 'solid' ? 'currentColor' : theme.vars.palette.text.icon,\r\n    borderRadius: 'var(--AspectRatio-radius)',\r\n    display: ownerState.flex ? 'flex' : 'block',\r\n    flex: ownerState.flex ? 1 : 'initial',\r\n    flexDirection: 'column',\r\n    margin: 'var(--AspectRatio-margin)'\r\n  };\r\n});\r\nconst AspectRatioContent = styled('div', {\r\n  name: 'JoyAspectRatio',\r\n  slot: 'Content',\r\n  overridesResolver: (props, styles) => styles.content\r\n})(({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  var _theme$variants;\r\n  return _extends({\r\n    flex: 1,\r\n    position: 'relative',\r\n    borderRadius: 'inherit',\r\n    height: 0,\r\n    paddingBottom: 'calc(var(--AspectRatio-paddingBottom) - 2 * var(--variant-borderWidth, 0px))',\r\n    overflow: 'hidden',\r\n    transition: 'inherit',\r\n    // makes it easy to add transition to the content\r\n    // use data-attribute instead of :first-child to support zero config SSR (emotion)\r\n    // use nested selector for integrating with nextjs image `fill` layout (spans are inserted on top of the img)\r\n    '& [data-first-child]': {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      boxSizing: 'border-box',\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      objectFit: ownerState.objectFit,\r\n      margin: 0,\r\n      padding: 0,\r\n      '& > img': {\r\n        // support art-direction that uses <picture><img /></picture>\r\n        width: '100%',\r\n        height: '100%',\r\n        objectFit: ownerState.objectFit\r\n      }\r\n    }\r\n  }, theme.typography['body-md'], (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\r\n});\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Aspect Ratio](https://mui.com/joy-ui/react-aspect-ratio/)\r\n * - [Skeleton](https://mui.com/joy-ui/react-skeleton/)\r\n *\r\n * API:\r\n *\r\n * - [AspectRatio API](https://mui.com/joy-ui/api/aspect-ratio/)\r\n */\r\nconst AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'JoyAspectRatio'\r\n  });\r\n  const {\r\n      children,\r\n      ratio = '16 / 9',\r\n      minHeight,\r\n      maxHeight,\r\n      objectFit = 'cover',\r\n      color = 'neutral',\r\n      variant = 'soft',\r\n      component,\r\n      flex = false,\r\n      slots = {},\r\n      slotProps = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const ownerState = _extends({}, props, {\r\n    flex,\r\n    minHeight,\r\n    maxHeight,\r\n    objectFit,\r\n    ratio,\r\n    color,\r\n    variant\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const externalForwardedProps = _extends({}, other, {\r\n    component,\r\n    slots,\r\n    slotProps\r\n  });\r\n  const [SlotRoot, rootProps] = useSlot('root', {\r\n    ref,\r\n    className: classes.root,\r\n    elementType: AspectRatioRoot,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  const [SlotContent, contentProps] = useSlot('content', {\r\n    className: classes.content,\r\n    elementType: AspectRatioContent,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\r\n    children: /*#__PURE__*/_jsx(SlotContent, _extends({}, contentProps, {\r\n      children: React.Children.map(children, (child, index) => index === 0 && /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\r\n        'data-first-child': ''\r\n      }) : child)\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? AspectRatio.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * Used to render icon or text elements inside the AspectRatio if `src` is not set.\r\n   * This can be an element, or just a string.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * @default 'neutral'\r\n   */\r\n  color: PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']),\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * By default, the AspectRatio will maintain the aspect ratio of its content.\r\n   * Set this prop to `true` when the container is a flex row and you want the AspectRatio to fill the height of its container.\r\n   * @default false\r\n   */\r\n  flex: PropTypes.bool,\r\n  /**\r\n   * The maximum calculated height of the element (not the CSS height).\r\n   */\r\n  maxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * The minimum calculated height of the element (not the CSS height).\r\n   */\r\n  minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * The CSS object-fit value of the first-child.\r\n   * @default 'cover'\r\n   */\r\n  objectFit: PropTypes.oneOf(['-moz-initial', 'contain', 'cover', 'fill', 'inherit', 'initial', 'none', 'revert-layer', 'revert', 'scale-down', 'unset']),\r\n  /**\r\n   * The aspect-ratio of the element. The current implementation uses padding instead of the CSS aspect-ratio due to browser support.\r\n   * https://caniuse.com/?search=aspect-ratio\r\n   * @default '16 / 9'\r\n   */\r\n  ratio: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    content: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\r\n   * @default 'soft'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\r\n} : void 0;\r\nexport default AspectRatio;", "import { generateUtilityClass, generateUtilityClasses } from '../className';\r\nexport function getAspectRatioUtilityClass(slot) {\r\n  return generateUtilityClass('MuiAspectRatio', slot);\r\n}\r\nconst aspectRatioClasses = generateUtilityClasses('MuiAspectRatio', ['root', 'content', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorSuccess', 'colorWarning', 'colorContext', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid']);\r\nexport default aspectRatioClasses;"],
  "mappings": "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",
  "names": ["AspectRatio", "_jsx", "PropTypes"]
}
